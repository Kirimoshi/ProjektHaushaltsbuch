@model IEnumerable<ProjektHaushaltsbuch.Web.ViewModels.ExpenseDisplayViewModel>

@{
    ViewData["Title"] = "Ausgaben";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Ausgaben</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Neue Ausgabe erstellen</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Betrag</th>
            <th>Datum</th>
            <th>Beschreibung</th>
            <th>Kategorie</th>
            <th>Zahlungsmethode</th>
            <th>Status</th>
            <th>Anhänge</th>
            <th>Aktionen</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <strong>@item.FormattedSum</strong>
                </td>
                <td>
                    @item.FormattedDate
                    <br />
                    <small class="text-muted">@item.TimeAgo</small>
                </td>
                <td>
                    <strong>@item.Description</strong>
                    @if (!string.IsNullOrEmpty(item.Notes))
                    {
                        <br />
                        <small class="text-muted">@item.Notes</small>
                    }
                </td>
                <td>
                    <span class="badge @item.ColorClass">
                        <i class="@item.IconClass"></i>
                        @item.CategoryName
                    </span>
                    @if (!string.IsNullOrEmpty(item.Subcategory))
                    {
                        <br />
                        <small>@item.Subcategory</small>
                    }
                </td>
                <td>
                    @item.PaymentMethodDisplay
                    @if (!string.IsNullOrEmpty(item.PaymentAccount))
                    {
                        <br />
                        <small class="text-muted">@item.PaymentAccount</small>
                    }
                </td>
                <td>
                    <span class="badge @(item.IsPlanned ? "bg-warning" : "bg-success")">
                        @item.StatusDisplay
                    </span>
                    @if (item.IsBusinessExpense)
                    {
                        <br />
                        <span class="badge bg-info">Geschäftsausgabe</span>
                    }
                    @if (item.IsRecurring)
                    {
                        <br />
                        <span class="badge bg-secondary">@item.RecurrenceDisplay</span>
                    }
                </td>
                <td>
                    @if (item.HasAttachments)
                    {
                        <i class="fas fa-paperclip"></i>
                        <span class="badge bg-light text-dark">@item.AttachmentCount</span>
                    }
                </td>
                <td>
                    @if (item.CanEdit)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-edit"></i>
                        </a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">
                        <i class="fas fa-eye"></i>
                    </a>
                    @if (item.CanDelete)
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                            <i class="fas fa-trash"></i>
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!Model.Any())
{
    <div class="alert alert-info">
        <h4>Keine Ausgaben vorhanden</h4>
        <p>Es wurden noch keine Ausgaben erfasst. <a asp-action="Create">Erstellen Sie Ihre erste Ausgabe</a>.</p>
    </div>
}